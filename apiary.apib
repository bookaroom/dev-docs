FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# comeet

API documentation for the comeet App and Backend.

<!--## Rooms Collection [/{organization}/rooms]
### List Rooms [GET]
+ Response 200 (application/json)
    + Attributes (array)
        + (room)
        + (room)-->
 
 
## Metro Areas Collection [/{organization}/metros]
### Metro Areas [GET]
+ Parameters
    + organization - The user's organization
    {
      "organization": "meetl.ink"
    }
    
+ Response 200 (application/json)

        [ {
          "metro" : "Boston-MA",
          "roomlists" : {
            "Bldg_CambMaOneStorySt@meetl.ink" : "One Story St Office",
            "Bldg_CambMaTwoStorySt@meetl.ink" : "Two Story St Office"
          }
        }, {
          "metro" : "Seattle-WA",
          "roomlists" : {
            "Bldg_CambMALoeb@meetl.ink" : "Loeb building"
          }
        } ]

## Search Rooms Collection [/{organization}/roomlists/{roomlist}/rooms{?start,end}]
### Search Rooms [GET]
+ Parameters
    + organization - The user's organization
    + roomlist - The roomlist to query
    + start (optional) - Start of the time interval to get free/busy info (iso 8601)
    + end (optional) -  End of the time interval to get free/busy info (iso 8601)

+ Response 200 (application/json)
    + Attributes (array)
        + (roomWithFreeBusy)
        + (roomWithFreeBusy)

## Book Room Collection [/{organization}/rooms/{roomrecipient}/reserve]
### Book Room [POST]
+ Parameters
    + organization - The user's organization
    + roomrecipient - The email address of the room to reserve
    
+ Attributes
    + start - Meeting start time (e.g. 2017-04-24T09:00:00-0400)
    + end - Meeting end time (e.g. 2017-04-24T10:00:00-0400)
    + subject - Meeting title
    + body - Meeting description
    + required - Required attendees (including room email)
    + optional - Optional attendees
    
+ Request (application/x-www-form-urlencoded)
        
+ Response 200 (application/json)

        {
            "success" : true
        }

## Meetings Collection [/{organization}/users/{user}/meetings]
### List Meetings [GET]
+ Parameters
    + organization - The user's organization
    + user - The email address of the user to get calendar info
    
+ Response 200 (application/json)
    + Attributes (array)
        + (meeting)

# Data Structures


## room (object) 
+ name: Brainstorming Room (string, required) - User facing string of the room's name
+ email: brainstorming@contoso.com (string, required) - The room's exchange email
+ address: 300 Main St (string) - User facing string address of the meeting room
+ country: USA (string) - User facing country of the meeting room
+ state: WA (string) - User facing state of the meeting room
+ metro: Seattle (string) - User facing string of the city or metroarea of the meeting room 
+ latitude: 47.652058 (string) - Latitude of the location of the mmeting room
+ longitude: `-122.355165` (string) - Longitude of the location of the mmeting room
+ capacity: 10 (number) - Maximum number of seated occupants at the meeting room
+ picture: http://www.thelongemonthotels.com/d/longemont/media/optimised_images/Club_Lounge_Meeting_Room.jpg (string) - Picture of the meeting room
+ navigation: `http://www.graindesigners.com/images-cdn/2015/10/17/dental-office-floor-plan-design-samples-dental-office-interior-design.jpg` (string) - map to the meeting room
+ amenities (array[amenity, amenity]) - amenities array for the room

## roomWithFreeBusy (room) 
+ freebusy (array[freebusystatus])

## user (object)
+ name: Dairai Nyabando (string, required) - User facing string of the user's name
+ email: dairai@exchange.com (string, required) - The user's exchange email

## meeting (object)
+ subject: Team building exercise (string, required) - User facing string of the meeting's subject
+ body: Let's learn to really work as a team and then have lunch! (string, required) - User facing string of the meeting's body
+ start: `2017-04-22 16:00:00` (string, required) - Start date of the meeting with YYYY-MM-DD HH:MI:Sec format
+ end: `2017-04-22 16:30:00` (string, required) - End date of the meeting with YYYY-MM-DD HH:MI:Sec format
+ location: Conference Room 12 (string) - User facing string of the meeting's location
+ room (room)
+ metingcreator (user)
+ requiredattendees (array[user])
+ optionalattendees (array[user])

## searchcriteria (object)
+ metroarea: Los Angeles CA (string, required) - The city name
+ roomlists: [building1@email.com:Seattle-WA,building2@email.com:Cambridge-MA]
//+ roomslists: Santa Monica Office, Downtown Park, Sunset Office, Culver City Park

## searchcriteriaNY (object)
+ metroarea: New York NY (string, required) - The city name
+ roomlists (array[building1,building2])
//+ roomslists: Brooklyn Office, Downtown Building, Queens Building, Lower East Side Shop

## searchcriteriaSEA (object)
+ metroarea: Seattle WA (string, required) - The city name
+ roomlists (array[building1,building2])
//+ roomslists: Downtown Building, South Lake Union Building, Fremont Office, Bellevue Office

##amenity (object)
+ name: projector (string, required) - name of the amenity
+ description: projector with DVI and HDMI (string, required) - description of the amenity

##freebusystatus (object)
+ status: busy (string, required) - status can be busy or free
+ start: `2017-04-22 16:00:00` (string, required) - Start date of the freebusy block with YYYY-MM-DD HH:MI:Sec format
+ end: `2017-04-22 16:30:00` (string, required) - End date of the freebusy block with YYYY-MM-DD HH:MI:Sec format

##sucessstatus (object)
+ success: true (boolean, required) - success status

##building1 (object)
+ name: NewYork (string, required) - the building name
+ email: building1@email.com (string, required) - the email of the building

##building2 (object)
+ name: Seattle (string, required) - the building name
+ email: building2@email.com (string, required) - the email of the building